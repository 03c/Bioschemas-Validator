{
  "@type": "Taxon",
  "version": "0.4-DRAFT-2019_06_19",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "@context": "http://schema.org",
  "$defs": {
    "URL": {
      "$id": "#url",
      "validityCheck": "type URL(according to schema RFC3986)",
      "type": "string",
      "pattern": "^[http(s)?://]",
      "format": "uri",
      "not": {
        "type": "string",
        "pattern": "^[^(http(s)?://)].",
        "format": "uri"
      }
    },
    "Taxon": {
      "@type": "Taxon",
      "version": "0.3-RELEASE-2018_11_10",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "@context": "http://schema.org",
      "$defs": {},
      "required": [
        "name"
      ],
      "properties": {
        "additionalType": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/$defs/URL",
                "validityCheck": "type \"URL\""
              }
            },
            {
              "$ref": "#/$defs/URL",
              "validityCheck": "type \"URL\""
            }
          ],
          "validityCheck": "We are expecting type \"URL\" in an array or as a single object"
        },
        "alternateName": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "validityCheck": "string"
              }
            },
            {
              "type": "string",
              "validityCheck": "string"
            }
          ],
          "validityCheck": "We are expecting string in an array or as a single object"
        },
        "childTaxon": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/URL",
                    "validityCheck": "type \"URL\""
                  },
                  {
                    "type": "string",
                    "validityCheck": "string"
                  },
                  {
                    "$ref": "#/$defs/Taxon",
                    "validityCheck": "profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
                  }
                ]
              }
            },
            {
              "$ref": "#/$defs/URL",
              "validityCheck": "type \"URL\""
            },
            {
              "type": "string",
              "validityCheck": "string"
            },
            {
              "$ref": "#/$defs/Taxon",
              "validityCheck": "profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
            }
          ],
          "validityCheck": "We are expecting one of the following: type \"URL\", string, profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
        },
        "hasCategoryCode": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "validityCheck": "\"CategoryCode\"",
                "properties": {
                  "@type": {
                    "const": "CategoryCode",
                    "validityCheck": "item \"CategoryCode\""
                  }
                }
              }
            },
            {
              "type": "object",
              "validityCheck": "\"CategoryCode\"",
              "properties": {
                "@type": {
                  "const": "CategoryCode",
                  "validityCheck": "item \"CategoryCode\""
                }
              }
            }
          ],
          "validityCheck": "We are expecting \"CategoryCode\" in an array or as a single object"
        },
        "name": {
          "anyOf": [
            {
              "type": "array",
              "maxItems": 1,
              "items": {
                "type": "string",
                "validityCheck": "string"
              }
            },
            {
              "type": "string",
              "validityCheck": "string"
            }
          ],
          "validityCheck": "We are expecting string in an array or as a single object"
        },
        "parentTaxon": {
          "anyOf": [
            {
              "type": "array",
              "maxItems": 1,
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/URL",
                    "validityCheck": "type \"URL\""
                  },
                  {
                    "type": "string",
                    "validityCheck": "string"
                  },
                  {
                    "$ref": "#/$defs/Taxon",
                    "validityCheck": "profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
                  }
                ]
              }
            },
            {
              "$ref": "#/$defs/URL",
              "validityCheck": "type \"URL\""
            },
            {
              "type": "string",
              "validityCheck": "string"
            },
            {
              "$ref": "#/$defs/Taxon",
              "validityCheck": "profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
            }
          ],
          "validityCheck": "We are expecting one of the following: type \"URL\", string, profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
        },
        "sameAs": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/$defs/URL",
                "validityCheck": "type \"URL\""
              }
            },
            {
              "$ref": "#/$defs/URL",
              "validityCheck": "type \"URL\""
            }
          ],
          "validityCheck": "We are expecting type \"URL\" in an array or as a single object"
        },
        "scientificName": {
          "anyOf": [
            {
              "type": "array",
              "maxItems": 1,
              "items": {
                "type": "string",
                "validityCheck": "string"
              }
            },
            {
              "type": "string",
              "validityCheck": "string"
            }
          ],
          "validityCheck": "We are expecting string in an array or as a single object"
        },
        "scientificNameAuthorship": {
          "anyOf": [
            {
              "type": "array",
              "maxItems": 1,
              "items": {
                "type": "string",
                "validityCheck": "string"
              }
            },
            {
              "type": "string",
              "validityCheck": "string"
            }
          ],
          "validityCheck": "We are expecting string in an array or as a single object"
        },
        "taxonRank": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/URL",
                    "validityCheck": "type \"URL\""
                  },
                  {
                    "type": "string",
                    "validityCheck": "string"
                  },
                  {
                    "type": "object",
                    "validityCheck": "\"PropertyValue\"",
                    "properties": {
                      "@type": {
                        "const": "PropertyValue",
                        "validityCheck": "item \"PropertyValue\""
                      },
                      "url": {
                        "$ref": "#/$defs/URL"
                      }
                    },
                    "required": [
                      "url"
                    ]
                  }
                ]
              }
            },
            {
              "$ref": "#/$defs/URL",
              "validityCheck": "type \"URL\""
            },
            {
              "type": "string",
              "validityCheck": "string"
            },
            {
              "type": "object",
              "validityCheck": "\"PropertyValue\"",
              "properties": {
                "@type": {
                  "const": "PropertyValue",
                  "validityCheck": "item \"PropertyValue\""
                },
                "url": {
                  "$ref": "#/$defs/URL"
                }
              },
              "required": [
                "url"
              ]
            }
          ],
          "validityCheck": "We are expecting one of the following: type \"URL\", string, \"PropertyValue\""
        },
        "url": {
          "anyOf": [
            {
              "type": "array",
              "maxItems": 1,
              "items": {
                "$ref": "#/$defs/URL",
                "validityCheck": "type \"URL\""
              }
            },
            {
              "$ref": "#/$defs/URL",
              "validityCheck": "type \"URL\""
            }
          ],
          "validityCheck": "We are expecting type \"URL\" in an array or as a single object"
        },
        "vernacularName": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "validityCheck": "string"
              }
            },
            {
              "type": "string",
              "validityCheck": "string"
            }
          ],
          "validityCheck": "We are expecting string in an array or as a single object"
        }
      }
    }
  },
  "required": [
    "name",
    "taxonRank"
  ],
  "properties": {
    "additionalType": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/URL",
            "validityCheck": "type \"URL\""
          }
        },
        {
          "$ref": "#/$defs/URL",
          "validityCheck": "type \"URL\""
        }
      ],
      "validityCheck": "We are expecting type \"URL\" in an array or as a single object"
    },
    "alternateName": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "validityCheck": "string"
          }
        },
        {
          "type": "string",
          "validityCheck": "string"
        }
      ],
      "validityCheck": "We are expecting string in an array or as a single object"
    },
    "childTaxon": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/URL",
                "validityCheck": "type \"URL\""
              },
              {
                "type": "string",
                "validityCheck": "string"
              },
              {
                "$ref": "#/$defs/Taxon",
                "validityCheck": "profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
              }
            ]
          }
        },
        {
          "$ref": "#/$defs/URL",
          "validityCheck": "type \"URL\""
        },
        {
          "type": "string",
          "validityCheck": "string"
        },
        {
          "$ref": "#/$defs/Taxon",
          "validityCheck": "profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
        }
      ],
      "validityCheck": "We are expecting one of the following: type \"URL\", string, profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
    },
    "hasCategoryCode": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "object",
            "validityCheck": "\"CategoryCode\"",
            "properties": {
              "@type": {
                "const": "CategoryCode",
                "validityCheck": "item \"CategoryCode\""
              }
            }
          }
        },
        {
          "type": "object",
          "validityCheck": "\"CategoryCode\"",
          "properties": {
            "@type": {
              "const": "CategoryCode",
              "validityCheck": "item \"CategoryCode\""
            }
          }
        }
      ],
      "validityCheck": "We are expecting \"CategoryCode\" in an array or as a single object"
    },
    "name": {
      "anyOf": [
        {
          "type": "array",
          "maxItems": 1,
          "items": {
            "type": "string",
            "validityCheck": "string"
          }
        },
        {
          "type": "string",
          "validityCheck": "string"
        }
      ],
      "validityCheck": "We are expecting string in an array or as a single object"
    },
    "parentTaxon": {
      "anyOf": [
        {
          "type": "array",
          "maxItems": 1,
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/URL",
                "validityCheck": "type \"URL\""
              },
              {
                "type": "string",
                "validityCheck": "string"
              },
              {
                "$ref": "#/$defs/Taxon",
                "validityCheck": "profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
              }
            ]
          }
        },
        {
          "$ref": "#/$defs/URL",
          "validityCheck": "type \"URL\""
        },
        {
          "type": "string",
          "validityCheck": "string"
        },
        {
          "$ref": "#/$defs/Taxon",
          "validityCheck": "profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
        }
      ],
      "validityCheck": "We are expecting one of the following: type \"URL\", string, profile type \"Taxon\", version 0.3-RELEASE-2018_11_10"
    },
    "sameAs": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/URL",
            "validityCheck": "type \"URL\""
          }
        },
        {
          "$ref": "#/$defs/URL",
          "validityCheck": "type \"URL\""
        }
      ],
      "validityCheck": "We are expecting type \"URL\" in an array or as a single object"
    },
    "taxonRank": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/URL",
                "validityCheck": "type \"URL\""
              },
              {
                "type": "string",
                "validityCheck": "string"
              },
              {
                "type": "object",
                "validityCheck": "\"PropertyValue\"",
                "properties": {
                  "@type": {
                    "const": "PropertyValue",
                    "validityCheck": "item \"PropertyValue\""
                  },
                  "url": {
                    "$ref": "#/$defs/URL"
                  }
                },
                "required": [
                  "url"
                ]
              }
            ]
          }
        },
        {
          "$ref": "#/$defs/URL",
          "validityCheck": "type \"URL\""
        },
        {
          "type": "string",
          "validityCheck": "string"
        },
        {
          "type": "object",
          "validityCheck": "\"PropertyValue\"",
          "properties": {
            "@type": {
              "const": "PropertyValue",
              "validityCheck": "item \"PropertyValue\""
            },
            "url": {
              "$ref": "#/$defs/URL"
            }
          },
          "required": [
            "url"
          ]
        }
      ],
      "validityCheck": "We are expecting one of the following: type \"URL\", string, \"PropertyValue\""
    },
    "url": {
      "anyOf": [
        {
          "type": "array",
          "maxItems": 1,
          "items": {
            "$ref": "#/$defs/URL",
            "validityCheck": "type \"URL\""
          }
        },
        {
          "$ref": "#/$defs/URL",
          "validityCheck": "type \"URL\""
        }
      ],
      "validityCheck": "We are expecting type \"URL\" in an array or as a single object"
    },
    "vernacularName": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "validityCheck": "string"
          }
        },
        {
          "type": "string",
          "validityCheck": "string"
        }
      ],
      "validityCheck": "We are expecting string in an array or as a single object"
    }
  }
}